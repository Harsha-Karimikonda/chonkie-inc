src/chonkie/experimental/code_registry.pyi:17: error: Function is missing a return type annotation  [no-untyped-def]
src/chonkie/experimental/code_registry.pyi:17: note: Use "-> None" if function does not return a value
src/chonkie/chunker/token.pyi:42: error: Signature of "chunk_batch" incompatible with supertype "BaseChunker"  [override]
src/chonkie/chunker/token.pyi:42: note:      Superclass:
src/chonkie/chunker/token.pyi:42: note:          def chunk_batch(self, texts: Sequence[str], show_progress: bool = ...) -> Sequence[Sequence[Chunk]] | Sequence[Sequence[str]]
src/chonkie/chunker/token.pyi:42: note:      Subclass:
src/chonkie/chunker/token.pyi:42: note:          def chunk_batch(self, texts: list[str], batch_size: int = ..., show_progress_bar: bool = ...) -> Sequence[Sequence[Chunk]]
src/chonkie/chunker/token.pyi:54: error: Signature of "__call__" incompatible with supertype "BaseChunker"  [override]
src/chonkie/chunker/token.pyi:54: note:      Superclass:
src/chonkie/chunker/token.pyi:54: note:          def __call__(self, text: str | Sequence[str], show_progress: bool = ...) -> Sequence[Chunk] | Sequence[Sequence[Chunk]] | Sequence[str] | Sequence[Sequence[str]]
src/chonkie/chunker/token.pyi:54: note:      Subclass:
src/chonkie/chunker/token.pyi:54: note:          def __call__(self, text: str | list[str], batch_size: int = ..., show_progress_bar: bool = ...) -> Sequence[Chunk] | Sequence[Sequence[Chunk]]
src/chonkie/chunker/code.pyi:25: error: Name "SupportedLanguage" is not defined  [name-defined]
src/chonkie/types/semantic.pyi:38: error: Incompatible types in assignment (expression has type "list[SemanticSentence]", base class "SentenceChunk" defined the type as "list[Sentence]")  [assignment]
src/chonkie/types/semantic.pyi:38: note: "List" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
src/chonkie/types/semantic.pyi:38: note: Consider using "Sequence" instead, which is covariant
src/chonkie/friends/porters/json.pyi:11: error: Signature of "export" incompatible with supertype "BasePorter"  [override]
src/chonkie/friends/porters/json.pyi:11: note:      Superclass:
src/chonkie/friends/porters/json.pyi:11: note:          def export(self, chunks: list[Chunk], **kwargs: dict[str, Any]) -> None
src/chonkie/friends/porters/json.pyi:11: note:      Subclass:
src/chonkie/friends/porters/json.pyi:11: note:          def export(self, chunks: list[Chunk], file: str = ...) -> None
src/chonkie/friends/porters/json.pyi:19: error: Signature of "__call__" incompatible with supertype "BasePorter"  [override]
src/chonkie/friends/porters/json.pyi:19: note:      Superclass:
src/chonkie/friends/porters/json.pyi:19: note:          def __call__(self, chunks: list[Chunk], **kwargs: dict[str, Any]) -> None
src/chonkie/friends/porters/json.pyi:19: note:      Subclass:
src/chonkie/friends/porters/json.pyi:19: note:          def __call__(self, chunks: list[Chunk], file: str = ...) -> None
src/chonkie/embeddings/sentence_transformer.pyi:20: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
src/chonkie/embeddings/sentence_transformer.pyi:48: error: Return type "float" of "similarity" incompatible with return type "floating[_32Bit]" in supertype "BaseEmbeddings"  [override]
src/chonkie/chunker/late.pyi:30: error: Argument 4 of "from_recipe" is incompatible with supertype "RecursiveChunker"; supertype defines the argument type as "str | Callable[..., Any] | Any"  [override]
src/chonkie/chunker/late.pyi:30: note: This violates the Liskov substitution principle
src/chonkie/chunker/late.pyi:30: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
src/chonkie/chunker/sdpm.pyi:52: error: Signature of "from_recipe" incompatible with supertype "SemanticChunker"  [override]
src/chonkie/chunker/sdpm.pyi:52: note:      Superclass:
src/chonkie/chunker/sdpm.pyi:52: note:          @classmethod
src/chonkie/chunker/sdpm.pyi:52: note:          def from_recipe(cls, name: str = ..., lang: str | None = ..., path: str | None = ..., embedding_model: str | BaseEmbeddings = ..., mode: str = ..., threshold: str | float | int = ..., chunk_size: int = ..., similarity_window: int = ..., min_sentences: int = ..., min_chunk_size: int = ..., min_characters_per_sentence: int = ..., threshold_step: float = ..., return_type: Literal['chunks', 'texts'] = ..., **kwargs: dict[str, Any]) -> SemanticChunker
src/chonkie/chunker/sdpm.pyi:52: note:      Subclass:
src/chonkie/chunker/sdpm.pyi:52: note:          @classmethod
src/chonkie/chunker/sdpm.pyi:52: note:          def from_recipe(cls, name: str = ..., lang: str | None = ..., path: str | None = ..., embedding_model: str | BaseEmbeddings = ..., mode: str = ..., threshold: str | float | int = ..., chunk_size: int = ..., similarity_window: int = ..., min_sentences: int = ..., min_chunk_size: int = ..., min_characters_per_sentence: int = ..., threshold_step: float = ..., skip_window: int = ..., return_type: Literal['chunks', 'texts'] = ..., **kwargs: dict[str, Any]) -> SDPMChunker
src/chonkie/friends/handshakes/chroma.pyi:46: error: Function "chromadb.Client" is not valid as a type  [valid-type]
src/chonkie/friends/handshakes/chroma.pyi:46: note: Perhaps you need "Callable[...]" or a callback protocol?
src/chonkie/__init__.pyi:13: error: Name "__name__" already defined (possibly by an import)  [no-redef]
